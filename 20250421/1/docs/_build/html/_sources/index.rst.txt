Добро пожаловать в документацию игры MOOD!
========================================

Это документация для игры MOOD, сервер и клиент которой реализованы на Python.

**Формулировка задачи**

- Скопировать решение Задачи_2 (где выделяются два модуля) с предыдущего занятия. Сделать коммит. Работать на ветке work.
- Добавить sphinx в pipenv
- Добавить на сервере MUD поддержку бродячих монстров:
    - один раз в 30 секунд (первый раз - по истечении 30 секунд от старта) выбирается случайный монстр, и он перемещается на одну клетку в случайно выбранном направлении (вправо/влево/вверх/вниз; помним, что поле "закольцовано")
    - если в результате перемещения монстр попал бы на клетку, где уже есть монстр, то перемещение НЕ ПРОИСХОДИТ, и проводится повторный выбор монстра и направления; и так пока не будет выполнено успешное перемещение монстра
    - при перемещении сервер выдаёт всем игрокам сообщение "<имя_монстра> moved one cell <направление>", где <направление> это right, left, up, down. Например: "manticore moved one cell right"
    - если монстр попадает на клетку, где есть игрок (или игроки), происходит "энкаунтер" - как если бы игрок(и) сам зашел(ли) на клетку с монстром
        - в т.ч. монстр отрисовывается у столкнувшихся с ним игроков, с произнесением приветственной фразы
- Для модуля-сервера задокументировать все функции, классы и модуль в формате autodoc
- Добиться выгонки технической документации по этим классам/функциям/модулю
    - Следить за тем, чтобы генераты (html-документация) не хранились в git (.gitignore), а настойки shpinx — хранились
- Оформить титульный лист документации (как минимум, скопипастить туда формулировку задачи)
- Сделать в титульном листе ссылку на техническую документацию

**Техническая документация**

- :ref:`Модуль сервера <server-module>`

.. toctree::
   :maxdepth: 2
   :caption: Содержание:

   server